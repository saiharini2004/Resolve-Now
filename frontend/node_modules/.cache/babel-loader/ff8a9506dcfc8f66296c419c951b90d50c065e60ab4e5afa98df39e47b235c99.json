{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saiha\\\\OneDrive\\\\Desktop\\\\ResolveNow\\\\frontend\\\\src\\\\components\\\\common\\\\ChatWindow.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Card, Form, Button, ListGroup } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatWindow = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const handleSend = () => {\n    if (input.trim()) {\n      setMessages([...messages, {\n        text: input,\n        sender: 'user'\n      }]);\n      setInput('');\n      setTimeout(() => {\n        setMessages(prev => [...prev, {\n          text: 'Agent will respond soon...',\n          sender: 'agent'\n        }]);\n      }, 1000);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"shadow-lg m-4 p-3 rounded chat-card\",\n    style: {\n      maxWidth: '500px',\n      margin: 'auto'\n    },\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        className: \"text-center text-primary\",\n        children: \"\\uD83D\\uDCAC Chat Support\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n        className: \"chat-box mb-3\",\n        style: {\n          maxHeight: '300px',\n          overflowY: 'auto'\n        },\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          className: `text-white ${msg.sender === 'user' ? 'bg-info' : 'bg-success'} mb-1 rounded`,\n          style: {\n            alignSelf: msg.sender === 'user' ? 'flex-end' : 'flex-start'\n          },\n          children: msg.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"d-flex\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Type a message...\",\n          value: input,\n          onChange: e => setInput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          className: \"ms-2\",\n          onClick: handleSend,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatWindow, \"HDAtGPGcvWga1zf1TBXg51T+tsc=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","Card","Form","Button","ListGroup","jsxDEV","_jsxDEV","ChatWindow","_s","messages","setMessages","input","setInput","handleSend","trim","text","sender","setTimeout","prev","className","style","maxWidth","margin","children","Body","Title","fileName","_jsxFileName","lineNumber","columnNumber","maxHeight","overflowY","map","msg","index","Item","alignSelf","Group","Control","type","placeholder","value","onChange","e","target","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Users/saiha/OneDrive/Desktop/ResolveNow/frontend/src/components/common/ChatWindow.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Card, Form, Button, ListGroup } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst ChatWindow = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n\r\n  const handleSend = () => {\r\n    if (input.trim()) {\r\n      setMessages([...messages, { text: input, sender: 'user' }]);\r\n      setInput('');\r\n      setTimeout(() => {\r\n        setMessages(prev => [...prev, { text: 'Agent will respond soon...', sender: 'agent' }]);\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className=\"shadow-lg m-4 p-3 rounded chat-card\" style={{ maxWidth: '500px', margin: 'auto' }}>\r\n      <Card.Body>\r\n        <Card.Title className=\"text-center text-primary\">ðŸ’¬ Chat Support</Card.Title>\r\n        <ListGroup className=\"chat-box mb-3\" style={{ maxHeight: '300px', overflowY: 'auto' }}>\r\n          {messages.map((msg, index) => (\r\n            <ListGroup.Item\r\n              key={index}\r\n              className={`text-white ${msg.sender === 'user' ? 'bg-info' : 'bg-success'} mb-1 rounded`}\r\n              style={{ alignSelf: msg.sender === 'user' ? 'flex-end' : 'flex-start' }}\r\n            >\r\n              {msg.text}\r\n            </ListGroup.Item>\r\n          ))}\r\n        </ListGroup>\r\n        <Form.Group className=\"d-flex\">\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Type a message...\"\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n          />\r\n          <Button variant=\"primary\" className=\"ms-2\" onClick={handleSend}>Send</Button>\r\n        </Form.Group>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ChatWindow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}